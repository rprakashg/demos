---
- name: include secrets
  include_vars:
    file: "./vars/secrets.yml"
- name: register the system
  become: true
  shell: |
    subscription-manager register --username={{ rhuser }} --password={{ rhpassword }} --force
    subscription-manager role --set="Red Hat Enterprise Linux Server"
    subscription-manager service-level --set="Self-Support"
    subscription-manager usage --set="Development/Test"
    subscription-manager attach

- name: install cockpit httpd firewall
  become: true
  ansible.builtin.dnf:
    state: present
    name: "{{ item }}"
  loop:    
    - firewalld
    - httpd
    - cockpit

- name: copy certs to target host
  block:
    - name: extract cert file name
      set_fact:
        cert: "{{ cockpit_cert | basename }}"
    - name: extract private key file name
      set_fact:
        private_key: "{{ cockpit_cert_private_key | basename }}"
    - name: extract dir name from cockpit cert file 
      set_fact:
        cert_dir: "{{ cockpit_cert | dirname }}"
    - name: copy certs
      copy:
        src: "{{ item }}"
        dest: "/usr/share/certs/"
        owner: root
        group: root
        mode: '0755'
      with_fileglob:
      - "{{ cert_dir }}/*.pem"
        
- name: Configure Cockpit with TLS using RHEL system roles
  ansible.builtin.include_role:
    name: rhel-system-roles.cockpit
  vars:
    cockpit_packages: full
    cockpit_enabled: true
    cockpit_socket: 'cockpit.socket'
    cockpit_port: 9090
    cockpit_tls: true
    cockpit_cert: "/usr/share/certs/{{ cert }}"
    cockpit_private_key: "/usr/share/certs/{{ private_key }}"
    cockpit_manage_firewall: false

- name: make cockpit elb aware
  ansible.builtin.copy:
    dest: "/etc/cockpit/cockpit.conf"
    content: |
      [WebService]
      Origins = https://{{ domain }} wss://{{ domain }} 
      ProtocolHeader = X-Forwarded-Proto

- name: restart cockpit
  ansible.builtin.systemd:
    name: cockpit
    state: restarted

- name: Configure Firewall for web console
  ansible.builtin.include_role:
    name: rhel-system-roles.firewall
  vars:
    firewall:
      service: cockpit
      state: enabled
      
- name: setup imagebuilder server
  become: true
  ansible.builtin.import_role:
    name: infra.osbuild.setup_server
  vars:
    _setup_server_base_packages:
      - rsync
      - osbuild-composer
      - composer-cli
      - cockpit-composer
      - bash-completion
      - genisoimage
      - weldr-client
      - python3
      - pykickstart

- name: setup imagebuilder with microshift
  become: true
  when: microshift | default(true)
  block:
    - name: "creating rhocp-{{ microshift_release }}.toml file"
      ansible.builtin.tempfile:
        state: file
        suffix: toml
      register: microshift_source

    - name: creating rhocp-{{ microshift_release }}.toml configuration file
      copy:
        dest: "{{ microshift_source.path }}"
        content: |
          id = "rhocp--{{ microshift_release }}"
          name = "Microshift version {{ microshift_release }}"
          type = "yum-baseurl"
          url = "https://cdn.redhat.com/content/dist/layered/rhel9/{{ ansible_architecture }}/rhocp/{{ microshift_release }}/os"
          check_gpg = true
          check_ssl = true
          system = false
          rhsm = true
    
    - name: "creating fastdatapath.toml file"
      ansible.builtin.tempfile:
        state: file
        suffix: toml
      register: fastdatapath_source

    - name: create fast-datapath.toml configuration file
      copy:
        dest: "{{ fastdatapath_source.path }}"
        content: |
          id = "fast-datapath"
          name = "Fast Datapath for RHEL 9 System"
          type = "yum-baseurl"
          url = "https://cdn.redhat.com/content/dist/layered/rhel9/{{ ansible_architecture }}/fast-datapath/os"
          check_gpg = true
          check_ssl = true
          system = false
          rhsm = true

    - name: add sources to image builder
      command: "sudo composer-cli sources add {{ item }}"
      loop:
        - "{{ microshift_source.path }}"
        - "{{ fastdatapath_source.path }}"
    