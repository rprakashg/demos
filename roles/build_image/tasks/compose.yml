---
- name: start compose
  block:
  - name: check whether components listed in blueprint and dependencies are valid
    ansible.builtin.shell: |
      composer-cli blueprints depsolve {{ blueprint_name }} | jq -r ".[].body.errors | length"
    register: depsolve_result

  - name: start compose when no errors with depsolve
    when: depsolve_result.stdout == 0
    blocK:
    - name: start compose 
      ansible.builtin.shell: |
        composer-cli --json compose start {{ blueprint_name }} edge-commit | jq -r ".[].body.build_id"
      register: start_compose_result

    - name: set job id
      set_fact:
        job_id: "{{ start_compose_result.stdout }}"

    - name: wait for compose to finish
      ansible.builtin.shell: |
        composer-cli --json compose info {{ job_id }} | jq -r ".[].body.queue_status"
      until: check_status_result.stdout not in ["RUNNING", "WAITING"]
      retries: "{{ retries }}"
      delay: "{{ delay }}"
      register: check_status_result

- name: download and untar compose artifact 
  block:
  - name: create a temp dir
    ansible.builtin.tempfile:
      state: directory
      suffix: "{{ blueprint_name }}"
    register: tempdir_result

  - name: set artifact dir
    set_fact:
      artifact_dir: "{{ tempdir_result.path }}"

  - name: download artifact
    ansible.builtin.shell: |
      composer-cli compose image {{ job_id }} --filename {{ artifact_dir }}/{{ blueprint_name }}_{{ blueprint_version }}.tar

  - name: untar artifact
    ansible.builtin.unarchive:
      src: "{{ artifact_dir }}/{{ blueprint_name }}_{{ blueprint_version }}.tar"
      dest: "{{ artifact_dir }}"
      remote_src: true

- name: extract commit from artifact and commit to main ostree repo
  block:
    - name: get checksum
      ansible.builtin.command:
        cmd: "ostree --repo=repo rev-parse {{ blueprint_rev }}"
        chdir: "{{ artifact_dir }}"
      register: get_checksum_result
      changed_when: false
    
    - name: set checksum in fact
      set_fact:
        checksum: "{{ get_checksum_result.stdout }}"

    - name: extract commit from artifact
      ansible.builtin.command:
        cmd: "ostree --repo=repo-dev pull-local {{ artifact_dir }}/repo {{ checksum }}"
        chdir: "/home/ostree/{{ blueprint_name }}"
      changed_when: true

    - name: commit changes
      ansible.builtin.command:
        argv:
          - ostree
          - " --repo=repo-dev"
          - " commit -b {{ blueprint_rev }}"
          - " -s 'Release {{ blueprint_version }}' "
          - " --add-metadata-string=blueprint={{ blueprint_name }}"
          - " --add-metadata-string=version={{ blueprint_version }}"
        chdir: "/home/ostree/{{ blueprint_name }}"
      changed_when: true 

    - name: copy compose.json
      ansible.builtin.copy:
        src: "{{ artifact_dir }}/compose.json"
        dest: "/home/ostree/{{ blueprint_name }}/repo-dev/{{ checksum }}-compose.json"
