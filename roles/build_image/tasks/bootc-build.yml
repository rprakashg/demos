---
- name: check input dockerfile is passed
  assert:
    that:
    - dockerfile != ""
    fail_msg: "dockerfile must be specified to build bootable container image"

- name: Create a temp file and copy the contents of Dockerfile to it to build
  block:
  - name: create temp file
    ansible.builtin.tempfile:
      state: file
      suffix: Dockerfile
    register: builder_dockerfile

  - name: set builder dockerfile
    ansible.builtin.set_fact:
      builder_dockerfile: "{{ builder_dockerfile.path }}"

  - name: read dockerfile data
    set_fact:
      dockerfile_data: "{{ lookup('file', dockerfile) | b64encode }}"

  - name: copy contents of dockerfile
    ansible.builtin.copy:
      dest: "{{ builder_dockerfile }}"
      content: |
        {{ dockerfile_data | b64decode }}

- name: login to registry.redhat.io with RH credentials
  ansible.builtin.shell: |
    podman login --username="{{ rhuser }}" --password="{{ rhpassword }}" registry.redhat.io

- name: build bootable container using the specified dockerfile
  containers.podman.podman_image:
    name: "{{ image_name }}"
    path: "{{ builder_dockerfile | dirname }}"
    tag: "{{ tag }}"
    state: present
    build:
      format: oci
      file: "{{ builder_dockerfile }}"
  register: build_result

- name: Display build result
  ansible.builtin.debug:
    var: build_result


  - name: Store account id in fact
    set_fact:
      AWS_ACCOUNT_ID: "{{ get_account_info.stdout }}"

  - name: get ecr token
    ansible.builtin.shell: |
      aws ecr get-login-password --region="{{ aws_region }}"
    register: get_ecr_token_result

  - name: store token
    ansible.builtin.set_fact:
      ecr_token: "{{ get_ecr_token_result.stdout }}"

  - name: login to registry
    ansible.builtin.shell: |
      podman login --username=AWS \
        --password="{{ ecr_token }}" "{{ AWS_ACCOUNT_ID }}.dkr.ecr.{{ aws_region }}.amazonaws.com"

- name: push the container to registry
  block:
  - name: login to registry
    containers.podman.podman_login:
      username: "{{ rhuser }}"
      password: "{{ rhpassword }}"
      registry: "{{ registry }}"
  - name: push to registry
    containers.podman.podman_image:
      name: "{{ image_name }}:{{ tag }}"
      push: yes
      push_args:
        dest: "{{ registry }}/{{ registry_user }}/{{ image_name }}:{{ tag }}"
    register: push_result

  - name: Display push result
    ansible.builtin.debug:
      var: push_result

