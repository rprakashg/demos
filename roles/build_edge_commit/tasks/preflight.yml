---
- name: check input blueprint is passed
  assert:
    that:
    - builder_blueprint_name != ""
    fail_msg: "blueprint must be specified to compose"

- name: check if blueprint is already added to osbuild composer
  ansible.builtin.shell: composer-cli --json blueprints show "{{ builder_blueprint_name }}" | jq -r ".[].body.blueprints[].version"
  register: blueprint_show_result
  ignore_errors: yes
    
- name: "set ostree url if {{ builder_blueprint_name }} exists"
  when: 
  - not blueprint_show_result.stdout == ""
  set_fact:
    ostree_url: "http://{{ subdomain }}.{{ base_domain }}/{{ blueprint_name }}/repo"

- name: debug ostree-url
  when: 
  - not blueprint_show_result.stdout == ""
  ansible.builtin.debug:
    msg: "OSTree URL: {{ ostree_url }}"

- name: create temp file to store blueprint
  ansible.builtin.tempfile:
    state: file
    suffix: toml
  register: builder_blueprint_file_result

- name: set blueprint file in fact
  ansible.builtin.set_fact:
    builder_blueprint_file: "{{ builder_blueprint_file_result.path }}"
    
- name: create blueprint file from definition
  infra.osbuild.create_blueprint:
    dest: "{{ builder_blueprint_file }}"
    name: "{{ builder_blueprint_name }}"
    description: "{{ builder_blueprint_description }}"
    distro: "{{ builder_blueprint_distro | default(omit) }}"
    packages: "{{ builder_compose_pkgs | default(omit) }}"
    customizations: "{{ builder_compose_customizations | default(omit) }}"

- name: push the blueprint to imagebuilder
  infra.osbuild.push_blueprint:
    src: "{{ builder_blueprint_file }}"

- name: Get new blueprint version
  ansible.builtin.shell: composer-cli --json blueprints show "{{ builder_blueprint_name }}" | jq -r ".[].body.blueprints[].version"
  register: new_blueprint_version_result

- name: Setting current blueprint version
  ansible.builtin.set_fact:
    blueprint_version: "{{ new_blueprint_version_result.stdout }}"

- name: check if dev repo is already initialized
  become: true
  ansible.builtin.stat:
    path: "/var/www/html/{{ builder_blueprint_name }}"
  register: blueprint_dir_stat

- name: initialize ostree repos
  become: true
  when: 
  - not blueprint_dir_stat.stat.exists
  block:
    - name: create directory
      ansible.builtin.file:
        path: "/var/www/html/{{ builder_blueprint_name }}"
        state: directory
        mode: "0755"
    - name: initialize rpm-ostree repository for blueprint
      ansible.builtin.command:
        chdir: "/var/www/html/{{ builder_blueprint_name }}"
        cmd: "ostree --repo=repo init --mode=archive"
      args:
        creates: "/var/www/html/{{ builder_blueprint_name }}/repo"
    - name: configure repo to allow signed commits
      when: signed_commits | default(true)
      block:
      - name: set gpg verify in repo config
        ansible.builtin.shell: |
          ostree --repo="/var/www/html/{{ builder_blueprint_name }}/repo" config set core.gpg-verify true
      - name: get key id
        ansible.builtin.shell: |
          gpg --list-keys 
        register: list_keys_result
      - name: Extract the Key ID
        ansible.builtin.set_fact:
          gpg_key_id: "{{ list_keys_result.stdout | regex_search('pub\\s+\\S+\\s+\\S+\\s+\\[(\\S+)\\n\\s+([A-F0-9])', '\\2') }}"
      - name: Debug key id
        ansible.builtin.debug:
          msg: "GPG Key ID: {{ gpg_key_id }}"
      - name: create a temp file to store exported pub key
        ansible.builtin.tempfile:
          state: file
          suffix: asc
        register: gpg_pub_key_result
      - name: Set pub key file 
        ansible.builtin.set_fact:
          gpg_pub_key: "{{ gpg_pub_key_result.path}}"
      - name: export the pub key
        ansible.builtin.shell: |
          gpg --armor --export {{ gpg_key_id }} > {{ gpg_pub_key }}
      - name: Import the signing pub key into repo
        ansible.builtin.shell: |
          ostree --repo="/var/www/html/{{ builder_blueprint_name }}/repo" gpg-import {{ gpg_pub_key }}
      - name: Delete the pub key file
        ansible.builtin.tempfile:
          path: "{{ gpg_pub_key }}"
          state: absent

- name: delete temp file
  ansible.builtin.file:
    state: absent
    path: "{{ builder_blueprint_file }}"